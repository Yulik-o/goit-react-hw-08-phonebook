{"version":3,"file":"static/js/61.363c0c1d.chunk.js","mappings":"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","sources":["../node_modules/react-router-dom/dom.ts","components/Layout/Layout.jsx","redux/selectors.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method: method.toLowerCase(), encType, formData };\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { logOutRequest } from 'redux/auth/authTransactions';\nimport { selectToken, selectUserEmail } from 'redux/selectors';\n\nexport default function Layout() {\n  const isLoggedIn = useSelector(selectToken);\n  const userEmail = useSelector(selectUserEmail);\n  const dispatch = useDispatch();\n  const handleLogOut = () => {\n    dispatch(logOutRequest());\n  };\n  return (\n    <>\n      <header>\n        <nav>\n          <NavLink to=\"/\">Home</NavLink>\n          {isLoggedIn ? (\n            <>\n              <NavLink to=\"/contacts\">Contacts</NavLink>\n              <p>{userEmail}</p>\n              <button onClick={handleLogOut}>Logout</button>\n            </>\n          ) : (\n            <>\n              <NavLink to=\"/login \">Login</NavLink>\n              <NavLink to=\"/register\">Register</NavLink>\n            </>\n          )}\n        </nav>\n      </header>\n      <main>\n        <Outlet />\n      </main>\n    </>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectToken = state => state.auth.token;\nexport const selectUserEmail = state => state.auth.email;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().trim().includes(filter.toLowerCase())\n    );\n  }\n);\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["opts","createRouter","basename","history","createBrowserHistory","hydrationData","parseHydrationData","enhanceManualRouteObjects","initialize","createHashHistory","state","_window","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","origin","search","nativeEvent","href","submitMethod","onSubmit","currentTarget","ScrollRestoration","defaultMethod","storageKey","useScrollRestoration","useDataRouterState","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","classNameProp","useDataRouterContext","ctx","DataRouterContext","handleClick","object","_temp","replaceProp","navigate","pathname","targetUrl","useNavigate","useCallback","shouldProcessLinkClick","startsWith","createPath","url","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","tagName","useMemo","e","disableScrollRestoration","enableScrollRestoration","isInputElement","toLowerCase","isButtonElement","children","useState","historyRef","React","useRef","current","_ref","v5Compat","SCROLL_RESTORATION_STORAGE_KEY","FetcherForm","isModifiedEvent","getSearchParamsForLocation","nextInit","navigateOptions","useSubmit","UseSubmitImpl","router","formEncType","fetch","_temp2","routeContext","RouteContext","ariaCurrent","matches","isFormElement","routeId","slice","match","route","index","params","message","delete","toString","joinPaths","createFetcherForm","fetcherId","useFetcher","UseFetcher","sessionStorage","setItem","Layout","isLoggedIn","useSelector","selectToken","userEmail","selectUserEmail","dispatch","useDispatch","NavLink","to","onClick","logOutRequest","selectContacts","contacts","items","auth","token","email","selectFilterContacts","createSelector","filter","contact","name","trim","includes","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}